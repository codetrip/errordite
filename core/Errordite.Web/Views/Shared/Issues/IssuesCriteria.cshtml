@using System.Text.RegularExpressions
@using Errordite.Core.Domain.Error
@using Errordite.Web.Extensions
@model Errordite.Web.Models.Issues.IssueCriteriaViewModel
           
@using (Html.BeginForm("index", "issues", FormMethod.Get, new { id = "issuesForm" }))
{
    <div class="filters errorditeform">
        <div class="text">
            @Html.TextBoxFor(m => m.Name, new { autocomplete = "off", placeholder = "Issue Name" })
        </div>
        <div class="dropdown-normal">
            @Html.DropDownListFor(m => m.ApplicationId, Model.Applications)
        </div>
        <div class="dropdown-normal">
            @Html.DropDownListFor(m => m.AssignedTo, new[] { new SelectListItem { Text = Resources.IssueResources.AssignedUser, Value = Resources.Shared.DefaultSelectValue } }.Union(Model.Users))
        </div>
        <div class="action">
            <ul class="nav nav-pills pull-right">
                <li class="dropdown" id="actions">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#actions">
                        Issue Actions
                        <b class="caret"></b>
                    </a>
                    <ul class="dropdown-menu">
                        @foreach (var status in Enum.GetNames(typeof(IssueStatus)).Where(name => name != IssueStatus.Unacknowledged.ToString()))
                        {
                            <li><a href="#" data-val-modal="StatusUpdate" data-val-status="@Regex.Replace(status, "([a-z])([A-Z])", "$1 $2")">Change status: @status</a></li>
                        }
                
                        <li class="divider"></li>
                        <li><a href="#" data-val-modal="Delete">Batch Delete</a></li>
                    </ul>
                </li>
            </ul>  
        </div>
    </div>
    <div class="clear"></div>
    <div class="filters errorditeform">
        <div class="date">
            @Html.TextBoxFor(m => m.StartDate, new { autocomplete = "off", placeholder = "Start Date", @class = "daterangepicker" })
        </div>
        <div class="date">
            @Html.TextBoxFor(m => m.EndDate, new { autocomplete = "off", placeholder = "End Date", @class = "daterangepicker" })
        </div>
        <div class="dropdown-small">
            <ul class="nav nav-pills">
                <li class="dropdown" id="status">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#status">
                        Issue Status
                        <b class="caret"></b>
                    </a>
                    <ul class="dropdown-menu">
                        <li>
                            <a href="#">Check all</a>
                        </li>
                        <li class="divider"></li>
                        @foreach (var status in Model.Statuses)
                        {
                            <li class="multicbox">
                                <input type="checkbox" name="Status" id="@status.Text" value="@status.Value" @(status.Selected ? "checked=checked" : string.Empty) />
                                <label for="@status.Text">@status.Text</label>
                            </li>
                        }
                    </ul>
                </li>
            </ul>  
        </div>
        <div class="buttons">
            <input type="submit" class="btn btn-success" value="Apply" />
            <a class="btn" href="@Url.Issues()">Clear</a>
        </div>
    </div>
    
}
