@using CodeTrip.Core.Extensions
@using Errordite.Core.Extensions
@using Errordite.Web.Extensions
@using Errordite.Web.Models.Errors
@model ErrorInstanceViewModel
           
<tr id="@Model.Error.FriendlyId"> 
    <td class="error-rowstate collapsed">&nbsp;</td> 
    <td class="word-break @(Model.Error.Classified ? "classified" : "")">@Model.Error.ExceptionInfo.Type</td>
    <td class="word-break">@Model.Error.ExceptionInfo.Message</td>
    <td>@Model.Error.TimestampUtc.ToLocalTimeFormatted()</td>
    <td>@Model.Error.MachineName</td>
    @if (!Model.HideIssues)
    {
        <td><a href="@Url.Issue(Model.Error.IssueId.GetFriendlyId())">Issue (@Model.Error.IssueId.GetFriendlyId())</a></td>  
    }
</tr>
<tr style="display:none;">
    <td class="error-item" colspan="7">
        <div class="inner-tabs">
            <ul class="nav">
                <li class="ui-tabs-selected">
                    <a href="#" data-val="exception" title="@Model.Error.ExceptionInfo.Type">
                        <i class="icon-zoom-out"></i>@(Model.Error.ExceptionInfos.Length == 1 ? "" :  "Outer: ")@Model.Error.ExceptionInfo.Type.LastElement('.')
                    </a>
                </li>
                @{
                    int count = 1;
                    foreach (var inner in Model.Error.ExceptionInfos.Skip(1))
                    {

                        <li>
                            <a href="#" data-val="inner-@count" title="@inner.Type"><i class="icon-zoom-in"></i>Inner @(++count): @inner.Type.LastElement('.')</a>
                        </li>
                    }
                    if (Model.Error.Messages != null)
                     {
                         <li>
                             <a href="#" data-val="messages" title="Messages"><i class="icon-zoom-in"></i>Log Messages</a>
                         </li>
                     }

                }
            </ul>
        </div>
        <div class="inner-tabs">
            <div id="exception" class="inner-tab">
                @Html.Partial("Errors/ErrorInfo", new ExceptionViewModel(Model.Error.ExceptionInfo, Model.Error.Url, Model.Error.UserAgent))
            </div>
            @foreach(var inner in Model.Error.ExceptionInfos)
            
            {
                <div id="inner-@count" class="inner-tab hidden">
                    @Html.Partial("Errors/ErrorInfo", new ExceptionViewModel(inner, null, Model.Error.UserAgent, true))
                </div>
            }
            @if (Model.Error.Messages != null)
            {
                <div id="messages" class="inner-tab">
                    @Html.Partial("Errors/TraceMessages", Model.Error.Messages)
                </div>
            }
        </div>
    </td>
</tr>

