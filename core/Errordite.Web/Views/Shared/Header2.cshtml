@using Errordite.Core.Caching.Entities
@using Errordite.Core.Domain.Organisation
@using Errordite.Core.Identity
@using Errordite.Web
@using Errordite.Web.Extensions
@using Errordite.Web.Models.Navigation
@using System.Linq
@using Errordite.Core.Extensions
@{
   var appContext = ViewData.GetAppContext();
}

<div class="welcome-bar-container">
    <div class="welcome-bar">
        
        <div class="applications">
            @if (appContext.AuthenticationStatus == AuthenticationStatus.Authenticated)
            {
                var applications = ViewData.GetCore().GetApplications().Items;
                var selectedApplication = applications.FirstOrDefault(a => a.FriendlyId == ViewData.GetSelectedApplication());
                var selectedApplicationName = selectedApplication == null ? null : selectedApplication.Name;
            
                <input type="hidden" value="@(selectedApplication == null ? string.Empty : selectedApplication.FriendlyId)" name="ApplicationId" id="ApplicationId" />
                <input type="hidden" value="@appContext.CurrentUser.ActiveOrganisation.Id" name="OrganisationId" id="OrganisationId" />
				
                if (appContext.CurrentUser.Organisations.Count > 1)
                {
                    <ul class="popup popup-pills">
                        <li class="dropdown" id="organisations">
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#organisations">
                                @appContext.CurrentUser.ActiveOrganisation.Name
                                <b class="caret"></b>
                            </a>
                            <ul class="dropdown-menu">
                                @foreach (var organisation in appContext.CurrentUser.Organisations)
                                {
                                    <li>
                                        <a href="@Url.CurrentRequest("{0}={1}".FormatWith(WebConstants.RouteValues.SetOrganisation, organisation.FriendlyId))">@organisation.Name</a>
                                    </li>
                                }
                            </ul>
                        </li>
                    </ul>
                }
                else
                {
                    <span class="header-org">@appContext.CurrentUser.ActiveOrganisation.Name</span>
                }
                 
                if (applications.Count > 1)
                {
                    <ul class="popup popup-pills" style="margin-left:15px">
                        <li class="dropdown" id="applications">
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#applications">
                                @if (selectedApplicationName.IsNullOrEmpty())
                                {
                                    <text>All Applications (@applications.Count())</text>
                                }
                                else
                                {
                                    @selectedApplicationName
                                }
                                <b class="caret"></b>
                            </a>
                            <ul class="dropdown-menu">
                                <li>
                                    <a href="@Url.CurrentRequest("{0}=-1".FormatWith(WebConstants.RouteValues.SetApplication))">All Applications (@applications.Count())</a>
                                </li>
                                @foreach (var application in applications)
                                {
                                    <li>
                                        <a href="@Url.CurrentRequest("{0}={1}".FormatWith(WebConstants.RouteValues.SetApplication, application.FriendlyId))">@application.Name</a>
                                    </li>
                                }
                            </ul>
                        </li>
                    </ul>
                }
            }
        </div>
        <nav class="main-nav">
            <ul class="nav">
                @if (appContext.AuthenticationStatus == AuthenticationStatus.Authenticated && (appContext.CurrentUser.Role == UserRole.SuperUser || appContext.Impersonated))
                {
                    <li class="nav-item">
                        <a href="@Url.Organisations()">System</a>
                        <ul>
                            <li><a href="@Url.Organisations()">Organisations</a></li> 
                            <li><a href="@Url.MessageFailures()">Message Failures</a></li> 
                            <li><a href="@Url.SyncIndexes()">Sync Indexes</a></li> 
                            <li><a href="@Url.Impersonate()">Impersonate</a></li> 
                            <li><a href="@Url.FlushAllCaches()">Flush Caches</a></li> 
                            @foreach (var cache in Enum.GetNames(typeof (CacheProfiles)))
                            {
                                <li><a href="@Url.Cache(cache)">@cache Cache</a></li>
                            }
                        </ul>
                    </li>
                }
                <li class="nav-item">
                    <a href="@Url.Dashboard()">Dashboard</a>
                    @if (appContext.AuthenticationStatus == AuthenticationStatus.Authenticated)
                    {
                        <ul>
                            <li><a href="@Url.Issues()">Issues</a></li>
                            <li><a href="@Url.Errors()">Errors</a></li>
                            <li><a href="@Url.ActivityLog()">Activity Log</a></li>
                            <li><a href="@Url.AddIssue()">Add an Issue</a></li>
                        </ul>
                    }
                </li>
                <li class="nav-item">
                    <a href="@Url.Subscription()">Account</a>
                    @if (appContext.AuthenticationStatus == AuthenticationStatus.Authenticated)
                    {
                        <ul>
                            <li><a href="@Url.YourDetails()">Edit your Profile</a></li>
                            @foreach (var adminPage in Breadcrumbs.GetById(BreadcrumbId.Admin, Url).Children)
                            {
                                <li><a href="@adminPage.Link">@adminPage.Title</a></li>
                            }
                        </ul>
                    }
                </li>
                <li class="nav-item">
                    <a href="@Url.QuickStart()">Docs</a>
                    <ul>
                        <li><a href="@Url.QuickStart()">Getting Started</a></li>
                        <li><a href="@Url.About()">About</a></li>
                        <li><a href="@Url.Pricing()">Pricing & Plans</a></li>
                        <li><a href="@Url.Clients()">Clients</a></li>
                    </ul>
                </li>
                @if (appContext.AuthenticationStatus == AuthenticationStatus.Anonymous || appContext.AuthenticationStatus == AuthenticationStatus.NotAuthenticated)
                {
                    <li class="nav-item">
                        <a href="@Url.QuickStart()">Sign In</a>
                    </li>
                }
                else
                {
                   <li class="nav-item">
                        <a href="@Url.SignOut()">Sign Out</a>
                    </li>
                }
                <li class="nav-item">
                    <a href="@Url.Contact()">Contact Us</a>
                </li>
            </ul>
        </nav>
        @*<nav class="links">
            @if (appContext.AuthenticationStatus == AuthenticationStatus.Anonymous)
            {
                @: <a href="@Url.SignIn()">Sign In</a> &nbsp;|&nbsp; <a href="@Url.About()">About</a> &nbsp;|&nbsp; <a href="@Url.Pricing()">Pricing</a> &nbsp;|&nbsp; <a href="@Url.Contact()">Contact Us</a>
            }
            else if (appContext.AuthenticationStatus == AuthenticationStatus.NotAuthenticated)
            {
	            @: Welcome <strong>@appContext.CurrentUser.FirstName</strong> &nbsp;|&nbsp; <a href="@Url.SignIn()">Sign In</a> &nbsp;|&nbsp; <a href="@Url.SignOut()">Not @appContext.CurrentUser.FirstName?</a> &nbsp;|&nbsp; <a href="@Url.About()">About</a> &nbsp;|&nbsp; <a href="@Url.Pricing()">Pricing</a> &nbsp;|&nbsp; <a href="@Url.Contact()">Contact Us</a>
            }
            else
            {
                <text>
                    Welcome <strong>@appContext.CurrentUser.FirstName
                                     @if (appContext.Impersonated)
                                     {
                                         <a href="@Url.Impersonate()">(IMP)</a>
                                     }
                                 </strong>&nbsp;|&nbsp; 
                    <a href="@Url.YourDetails()">Your Details</a> &nbsp;|&nbsp; <a href="@Url.SignOut()">Sign Out</a> &nbsp;|&nbsp; <a href="@Url.About()">About</a> &nbsp;|&nbsp; <a href="@Url.Pricing()">Pricing</a> &nbsp;|&nbsp; <a href="@Url.Contact()">Contact Us</a>
                </text> 
            }
        </nav>*@
    </div>
</div>
<div class="header-container">
    <div class="header">
        <div class="logo">
            <a href="@Url.Home(ViewData.GetAppContext())"><img alt="Errordite: Home" src="@Url.Content("~/Assets/Images/header-logo.png")"/></a>
        </div>
        <div class="search">
            @using (Html.BeginForm("index", "search", FormMethod.Get))
            {
                <div class="search-box" data-title="@(appContext.AuthenticationStatus != AuthenticationStatus.Authenticated ? "Please sign in to enable search" : string.Empty)">
                    <i class="icon-search"></i>
                    <input autocomplete="off" class="search-input" id="q" name="q" placeholder="Search your errors & issues..." type="text"  @(appContext.AuthenticationStatus != AuthenticationStatus.Authenticated ? "disabled=disabled" : string.Empty) />
                    <input type="submit" class="search-btn" value="Go" @(appContext.AuthenticationStatus != AuthenticationStatus.Authenticated ? "disabled=disabled" : string.Empty) />
                </div>
            }
        </div>
        <div class="pull-right" style="margin-top:17px">
            <a href="@Url.SignUp()" class="btn btn-grey btn-small">Sign Up</a>
        </div>
    </div>
</div>