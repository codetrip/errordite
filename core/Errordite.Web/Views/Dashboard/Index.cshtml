@using Errordite.Web.Extensions
@using Errordite.Web.Models.Dashboard
@model DashboardViewModel
           
@{
    ViewBag.Title = "Dashboard";
}

<section id="dashboard" class="centered">
    <div class="content">
        @if (Model.SingleApplicationId != null && Model.TotalIssues < 3)
        {
            <div class="two-col">
                <div class="small-padding right">
                    <p>
						This is your <strong>dashboard</strong>, where you can see the most recent issues and errors affecting your system, the issues that need your attention, and overall statistics.
                    </p>
                    <p>
                        You do not have much going on at the moment.  
                        Click @Html.ActionLink("here", "generateerror", "applications", new {applicationId = Model.SingleApplicationId, returnUrl = Url.CurrentRequest()}, new{@class="post"}) to generate a test error and get things going.
                    </p>
                </div>
            </div>
            <div class="two-col">
                <div class="small-padding right">
                    
            
                    @if (Model.SingleApplicationId != null)
                    {
                        <p class="textbox">
                            Your default app token is <b>@Model.SingleApplicationToken</b>
                        </p>
                    }
                    
                    <p>
                        To get started for real download the client and configure it into your application - details @Html.ActionLink("here", "clients", "docs").  
                    </p>

                    @if (Model.TestIssueId != null)
                    {
                        <p>
                            You've created a test issue - to see it, click <a href="@Url.Issue(Model.TestIssueId)">here</a>.
                        </p>
                    }
                </div>
            </div>
            <div class="clear border"></div>
        }

        @if (Model.HasApplications && Model.RecentIssues.Any())
        {
	        <h2 class="section-header dashboard">Errors</h2>
	        <div id="graph" style="width: 960px; height: 300px; margin-bottom: 20px"></div>
            <div id="graph-spinner" class="spinner-parent graph"></div>

	        <div class="two-thirds">
				<div class="form form-inline criteria">
					<ul>
						<li style="width:100%">
							<h2 class="section-header dashboard" style="float:left">Issues</h2>
							@Html.DropDownListFor(m => m.SortId, Model.SortOptions, new { style="float:right" })
						</li>
					</ul>
				</div>
		        <table id="issues" class="table table-condensed history">
			        <thead>
				        <tr>
					        <th style="width: 375px">Name</th>
					        <th>Last Error</th>
					        <th>Count</th>
				        </tr>
			        </thead>
			        <tbody>
				        @foreach (var issue in Model.RecentIssues)
				        {
					        @Html.Partial("Dashboard/Issue", issue)
				        }
			        </tbody>
		        </table>
				<div id="issues-spinner" class="spinner-parent issues"></div>
	        </div>
	        <div class="one-third">
		        <h2 class="section-header dashboard" style="margin-left: 7px;">Status</h2>
		        <div id="piechart" style="width: 400px; height: 400px;"></div>
				<div id="piechart-spinner" class="spinner-parent piechart"></div>
	        </div>
        }
        else
        {
	        <span>You currently have no issues or errors</span>
        }
        <div class="clear"></div>
    </div>
</section>


