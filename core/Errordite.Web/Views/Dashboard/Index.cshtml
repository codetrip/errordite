
@using Errordite.Web.Extensions
@using Errordite.Web.Models.Dashboard
@model DashboardViewModel
           
@{
    ViewBag.Title = "Dashboard";
}

@section topheader
{
    <div class="dark-container">
        <section class="centered">
            @Html.Partial("Dashboard/Links", Model)
        </section> 
    </div>
}

<section id="dashboard" class="centered">
    <div class="content">
        @Html.HiddenFor(m => m.LastPoll)
        @if (Model.SingleApplicationId != null && Model.Stats.Issues < 3)
        {
            <div class="two-col">
                <div class="small-padding right">
                    <p>
						This is your <strong>dashboard</strong>, where you can see the most recent issues and errors affecting your system, the issues that need your attention, and overall statistics.
                    </p>
                    <p>h
                        You do not have much going on at the moment.  
                        Click @Html.ActionLink("here", "generateerror", "applications", new {applicationId = Model.SingleApplicationId, returnUrl = Url.CurrentRequest()}, new{@class="post"}) to generate a test error and get things going.
                    </p>
                </div>
            </div>
            <div class="two-col">
                <div class="small-padding right">
                    
            
                    @if (Model.SingleApplicationId != null)
                    {
                        <p class="textbox">
                            Your default app token is <b>@Model.SingleApplicationToken</b>
                        </p>
                    }
                    
                    <p>
                        To get started for real download the client and configure it into your application - details @Html.ActionLink("here", "clients", "docs").  
                    </p>

                    @if (Model.TestIssueId != null)
                    {
                        <p>
                            You've created a test issue - to see it, click <a href="@Url.Issue(Model.TestIssueId)">here</a>.
                        </p>
                    }
                </div>
            </div>
            <div class="clear border"></div>
        }

        @if (Model.HasApplications)
        {
            <h2 class="section-header dashboard">Errors from the last month</h2>
            <div id="graph" style="width: 100%; height: 300px; margin-bottom:20px"></div>
            
            <div class="two-col">
                <h2 class="section-header dashboard">Recent Issues</h2>
                <div id="issues">
                    @foreach(var issue in Model.RecentIssues)
                    {
                        @Html.Partial("Dashboard/Issue", issue)
                    }
                </div>
				
            </div>
            <div class="two-col">
                <h2 class="section-header dashboard">Recent Errors</h2>
                
            </div>
        }
        <div class="clear"></div>
    </div>
</section>


