@using Errordite.Web.Models.Docs
@using Errordite.Web.Extensions
@{
    ViewBag.Title = "Send error with JSON";
}

@section header
{
    @Html.Partial("Docs/Tabs", DocsTab.SendErrorWithJson) 
}

<section class="centered">
    <div class="content help">
        <h1>Send error with JSON</h1>
        
        <p>
            Errordite can work with any language or technology.  Simply post the JSON below to https://www.errordite.com/receiveerror.  
            If you would like to create a client plug-in for your favoured technology, we'd love to <a href="@Url.Contact()">hear from you</a>.
        </p>

        <pre class="prettyprint">
{
    "Token" : &lt;string>,              //your application token, taken from Errordite
    "MachineName" : &lt;string>,        //the machine that generated the error
    "Url" : &lt;string>,                //the url of the request that caused the error if a webapp (null otherwise)
    "UserAgent" : &lt;string>,          //the user-agent from the request that caused the error if a web app (null otherwise)
    "TimestampUtc" : &lt;datetime>,     //the timestamp of the error (in UTC).  Use an ISO format like yyyy-MM-dd hh:mm:ss
    "Version" : &lt;string>,            //the version of your application when the error was raised
    "ExceptionInfo" : {
        "Message" : &lt;string>,        //the message of the exception
        "Source" : &lt;string>,         //the programmatic module that threw the exception 
                                        //(exact definition depends on technology stack)
        "ExceptionType" : &lt;string>,  //the type of the exception
        "StackTrace" : &lt;string>,     //the stack trace - formatting already done (i.e. indents & newlines)
        "MethodName" : &lt;string>,     //the name of the method / function that threw the error
        "Data" : {                      //bag of extra information
            "PropertyName1" : &lt;string>,
            ...
            "PropertyName2" : &lt;string>
        },
        "InnerExceptionInfo" : {        //recursive definition - same as ExceptionInfo above
            "Message" : &lt;string>
            ...
        }
    }
}
        </pre>
    </div>
    
</section>
