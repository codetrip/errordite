@using Errordite.Web.Extensions
@using Errordite.Core.Domain.Error;

@model Errordite.Web.Models.Issues.AddIssueViewModel
           
@{
    ViewBag.Title = "Create Issue";
}

@section contentHeader
{
    <div id="pagetitle">
        <h1><i class="icon-arrow-right"></i>Create an Issue</h1>
    </div>
    <div class="border"></div>
}

<div id="addissue">
    <p>Use this form to create an issue so you can preemptively monitor for a particular exception within your application.</p>
    @using (Html.BeginForm("add", "issues", FormMethod.Post, new { id = "addIssue" }))
    {
        <div class="base left-wide">
            <h2>Issue Details</h2>
            <div class="base-content">
                <ul class="errorditeform">
                    <li class="left">
                        @Html.LabelFor(m => m.Name, "Issue Name")
                        @Html.TextBoxFor(m => m.Name)
                        <i rel="tooltip" title="Give this issue a more meaningful name to help identify and search for it." class="icon-info-sign"></i>
                        @Html.ValidationMessageFor(m => m.Name)
                    </li>
                    <li class="right">
                        @Html.LabelFor(m => m.ApplicationId, "Application")
                        @Html.DropDownListFor(m => m.ApplicationId, Model.Applications)
                        <i rel="tooltip" title="The application to which this issue is associated." class="icon-info-sign"></i>
                    </li>
                    <li class="left">
                        @Html.LabelFor(m => m.Status, "Status")
                        @Html.DropDownListFor(m => m.Status, Model.Statuses.Where(s => s.Value != IssueStatus.Unacknowledged.ToString()))
                    <i rel="tooltip" title="Assign an initial status to the issue." class="icon-info-sign"></i>
                    </li>
                    <li class="right">
                        @Html.LabelFor(m => m.UserId, "Assigned User")
                        @Html.DropDownListFor(m => m.UserId, Model.Users)
                        <i rel="tooltip" title="Assign a user to this issue." class="icon-info-sign"></i>
                    </li>
                    @*<li class="left">
                        @Html.LabelFor(m => m.Priority, "Match Priority")
                        @Html.DropDownListFor(m => m.Priority, Model.Priorities)
                        <i rel="tooltip" title="Setting the match priority for an issue controls which issue an error is assigned to when there are multiple matches. An issue with a higher match priority will have the error assigned to it." class="icon-info-sign"></i>
                    </li>*@
                </ul>
            </div>
        </div>
        <div class="clear-space"></div>
        <div class="clear-space"></div>
        <div id="rules">
            <h3>Issue Rules</h3>
            <div class="base-content">
                <table class="table-bordered errorditeform" id="rules-table">
                    <thead>
                        <tr>
                            <th class="property">Property</th>
                            <th class="operator">Operator</th>
                            <th class="value">Match</th>
                            <th class="tablebtn">Remove Rule</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int rr = 0; rr < Model.Rules.Count; rr++)
                        {
                            @Html.EditorFor(m => m.Rules[rr])
                        } 
                        <tr><td colspan="4"><a class="add" href="#">Add Rule</a></td></tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="clear-space"></div>
        <div class="colfull">
            <input type="submit" class="btn btn-success" value="Add Issue" />
            <a class="btn" href="@Url.Issues()" >Cancel</a>
        </div>
    }
</div>