@using Errordite.Core.Extensions
@using Errordite.Core.Domain
@using Errordite.Web.Models.Issues
@using Errordite.Web.Extensions
@model IssueViewModel

@{
	ViewBag.Title = "Issue {0} ({1}) | {2}".FormatWith(IdHelper.GetFriendlyId(Model.Update.IssueId), Model.Tab, Model.Update.Name);
	ViewBag.FinalBreadcrumb = "Issue {0}".FormatWith(IdHelper.GetFriendlyId(Model.Update.IssueId));
}

@section header
{
	<div class="issue-title-container">
		<div class="centered">
			<span class="title">
				@Model.Details.ApplicationName - @Model.Update.Name @(Model.Details.TestIssue ? "(TEST)" : string.Empty)
			</span>
			<span class="details">
				<span id="instance-count" class="bold">
					@Model.Details.ErrorCount
				</span> 
				error@(Model.Details.ErrorCount == 1 ? "" : "s") | First:
				<span class="bold">
					@Model.Details.FirstErrorUtc.ToLocalTimeFormatted()
				</span> | Last:
				<span class="bold">
					@Model.Details.LastErrorUtc.ToLocalTimeFormatted()
				</span>
			</span>
		</div>
	</div>
    <div class="tabs-container">
        <ul id="issue-tabs" class="tabs">
	        <li @(Model.Tab == IssueTab.Details ? " class=active" : " class=inactive") >
		        <a href="@Url.Issue(Model.Update.IssueId, IssueTab.Details, Model.Token)" class="tablink" data-val="details"><span>Details</span></a> 
	        </li>
			@if (!Model.ReadOnly)
			{
				<li @(Model.Tab == IssueTab.Rules ? " class=active" : " class=inactive") >
					<a href="@Url.Issue(Model.Update.IssueId, IssueTab.Rules, Model.Token)" class="tablink" data-val="rules"><span>Rules</span></a>
				</li>
			}
            <li @(Model.Tab == IssueTab.Reports ? " class=active" : " class=inactive") >
                <a href="@Url.Issue(Model.Update.IssueId, IssueTab.Reports, Model.Token)" class="tablink" data-val="reports"><span>Reports</span></a> 
            </li>
			@if (!Model.ReadOnly)
			{
	            <li @(Model.Tab == IssueTab.History ? " class=active" : " class=inactive") >
		            <a href="@Url.Issue(Model.Update.IssueId, IssueTab.History, Model.Token)" class="tablink" data-val="history"><span>History</span></a>
	            </li>
				<li class="button">
					<div id="rules-adjusted" style="display:none;">
						<button id="apply-rule-updates" class="btn btn-small btn-blue tool-tip" data-title="You have made rule changes but not yet saved them. Click here to save.">Apply Rule Updates</button>
						<div class="what-if-message">&nbsp;</div>
					</div>
				</li>
			}
            
        </ul>
    </div>
}
           
<section id="issue" class="centered">
	<div class="content">
		<div id="details" class="tab @(Model.Tab == IssueTab.Details ? "" : "hidden")">
			@Html.Partial("Details", Model)
		</div>
		@if (!Model.ReadOnly)
		{
			using (Html.BeginForm("AdjustRules", "issue", FormMethod.Post, new { id = "rulesForm" }))
			{
				<div id="rules" class="tab @(Model.Tab == IssueTab.Rules ? "" : "hidden")">
					@Html.Partial("Rules", Model.Update)
				</div>
				@Html.Partial("UpdateIssue", Model.Update)
			}
		}
	    <div id="reports" class="tab @(Model.Tab == IssueTab.Reports ? "" : "hidden")">
	        @Html.Partial("Reports", Model.Details)
	    </div>
        @if (!Model.ReadOnly)
		{
		    <div id="history" class="tab @(Model.Tab == IssueTab.History ? "" : "hidden")">
		        <table class="table table-condensed history" id="history-items">
		            <thead>
		                <tr>
		                    <th>User</th>
		                    <th>Occured</th>
		                    <th>Message</th>
		                </tr>
		            </thead>
		            <tbody></tbody>
		        </table>
		    </div>
		}
	</div>
	@if (!Model.ReadOnly)
	{
		@Html.Partial("Reprocess", Model.Details)
		@Html.Partial("AddComment", new AddCommentViewModel(Model.Details.IssueId))
	}
</section>


    
